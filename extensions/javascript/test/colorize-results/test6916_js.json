[
	{
		"c": "for",
		"t": "source.js keyword.control.loop.js",
		"r": {
			"dark_plus": "keyword.control: rgb(197, 134, 192)",
			"light_plus": "keyword.control: rgb(175, 0, 219)",
			"dark_vs": "keyword.control: rgb(86, 156, 214)",
			"light_vs": "keyword.control: rgb(0, 0, 255)",
			"hc_black": "keyword.control: rgb(86, 156, 214)"
		}
	},
	{
		"c": "(",
		"t": "source.js meta.brace.round.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "var",
		"t": "source.js meta.var.expr.js storage.type.js",
		"r": {
			"dark_plus": "storage.type: rgb(86, 156, 214)",
			"light_plus": "storage.type: rgb(0, 0, 255)",
			"dark_vs": "storage.type: rgb(86, 156, 214)",
			"light_vs": "storage.type: rgb(0, 0, 255)",
			"hc_black": "storage.type: rgb(86, 156, 214)"
		}
	},
	{
		"c": " ",
		"t": "source.js meta.var.expr.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "i",
		"t": "source.js meta.var.expr.js meta.var-single-variable.expr.js variable.other.readwrite.js",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "=",
		"t": "source.js meta.var.expr.js keyword.operator.assignment.js",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": "0",
		"t": "source.js meta.var.expr.js constant.numeric.decimal.js",
		"r": {
			"dark_plus": "constant.numeric: rgb(181, 206, 168)",
			"light_plus": "constant.numeric: rgb(9, 136, 90)",
			"dark_vs": "constant.numeric: rgb(181, 206, 168)",
			"light_vs": "constant.numeric: rgb(9, 136, 90)",
			"hc_black": "constant.numeric: rgb(181, 206, 168)"
		}
	},
	{
		"c": ";",
		"t": "source.js punctuation.terminator.statement.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "i",
		"t": "source.js variable.other.readwrite.js",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "<",
		"t": "source.js keyword.operator.relational.js",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": "9",
		"t": "source.js constant.numeric.decimal.js",
		"r": {
			"dark_plus": "constant.numeric: rgb(181, 206, 168)",
			"light_plus": "constant.numeric: rgb(9, 136, 90)",
			"dark_vs": "constant.numeric: rgb(181, 206, 168)",
			"light_vs": "constant.numeric: rgb(9, 136, 90)",
			"hc_black": "constant.numeric: rgb(181, 206, 168)"
		}
	},
	{
		"c": ";",
		"t": "source.js punctuation.terminator.statement.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "i",
		"t": "source.js variable.other.readwrite.js",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "++",
		"t": "source.js keyword.operator.increment.js",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": ")",
		"t": "source.js meta.brace.round.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "{",
		"t": "source.js meta.block.js punctuation.definition.block.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "for",
		"t": "source.js meta.block.js keyword.control.loop.js",
		"r": {
			"dark_plus": "keyword.control: rgb(197, 134, 192)",
			"light_plus": "keyword.control: rgb(175, 0, 219)",
			"dark_vs": "keyword.control: rgb(86, 156, 214)",
			"light_vs": "keyword.control: rgb(0, 0, 255)",
			"hc_black": "keyword.control: rgb(86, 156, 214)"
		}
	},
	{
		"c": "(",
		"t": "source.js meta.block.js meta.brace.round.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "var",
		"t": "source.js meta.block.js meta.var.expr.js storage.type.js",
		"r": {
			"dark_plus": "storage.type: rgb(86, 156, 214)",
			"light_plus": "storage.type: rgb(0, 0, 255)",
			"dark_vs": "storage.type: rgb(86, 156, 214)",
			"light_vs": "storage.type: rgb(0, 0, 255)",
			"hc_black": "storage.type: rgb(86, 156, 214)"
		}
	},
	{
		"c": " ",
		"t": "source.js meta.block.js meta.var.expr.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "j",
		"t": "source.js meta.block.js meta.var.expr.js meta.var-single-variable.expr.js variable.other.readwrite.js",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ";",
		"t": "source.js meta.block.js punctuation.terminator.statement.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "j",
		"t": "source.js meta.block.js variable.other.readwrite.js",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "<",
		"t": "source.js meta.block.js keyword.operator.relational.js",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": "i",
		"t": "source.js meta.block.js variable.other.readwrite.js",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ";",
		"t": "source.js meta.block.js punctuation.terminator.statement.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "j",
		"t": "source.js meta.block.js variable.other.readwrite.js",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "++",
		"t": "source.js meta.block.js keyword.operator.increment.js",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": ")",
		"t": "source.js meta.block.js meta.brace.round.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "{",
		"t": "source.js meta.block.js meta.block.js punctuation.definition.block.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "if",
		"t": "source.js meta.block.js meta.block.js keyword.control.conditional.js",
		"r": {
			"dark_plus": "keyword.control: rgb(197, 134, 192)",
			"light_plus": "keyword.control: rgb(175, 0, 219)",
			"dark_vs": "keyword.control: rgb(86, 156, 214)",
			"light_vs": "keyword.control: rgb(0, 0, 255)",
			"hc_black": "keyword.control: rgb(86, 156, 214)"
		}
	},
	{
		"c": "(",
		"t": "source.js meta.block.js meta.block.js meta.brace.round.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "j",
		"t": "source.js meta.block.js meta.block.js variable.other.readwrite.js",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "+",
		"t": "source.js meta.block.js meta.block.js keyword.operator.arithmetic.js",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": "i",
		"t": "source.js meta.block.js meta.block.js variable.other.readwrite.js",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "<",
		"t": "source.js meta.block.js meta.block.js keyword.operator.relational.js",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": "3",
		"t": "source.js meta.block.js meta.block.js constant.numeric.decimal.js",
		"r": {
			"dark_plus": "constant.numeric: rgb(181, 206, 168)",
			"light_plus": "constant.numeric: rgb(9, 136, 90)",
			"dark_vs": "constant.numeric: rgb(181, 206, 168)",
			"light_vs": "constant.numeric: rgb(9, 136, 90)",
			"hc_black": "constant.numeric: rgb(181, 206, 168)"
		}
	},
	{
		"c": ")",
		"t": "source.js meta.block.js meta.block.js meta.brace.round.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "return",
		"t": "source.js meta.block.js meta.block.js keyword.control.flow.js",
		"r": {
			"dark_plus": "keyword.control: rgb(197, 134, 192)",
			"light_plus": "keyword.control: rgb(175, 0, 219)",
			"dark_vs": "keyword.control: rgb(86, 156, 214)",
			"light_vs": "keyword.control: rgb(0, 0, 255)",
			"hc_black": "keyword.control: rgb(86, 156, 214)"
		}
	},
	{
		"c": " ",
		"t": "source.js meta.block.js meta.block.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "i",
		"t": "source.js meta.block.js meta.block.js variable.other.readwrite.js",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "<",
		"t": "source.js meta.block.js meta.block.js keyword.operator.relational.js",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": "j",
		"t": "source.js meta.block.js meta.block.js variable.other.readwrite.js",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ";",
		"t": "source.js meta.block.js meta.block.js punctuation.terminator.statement.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "}",
		"t": "source.js meta.block.js meta.block.js punctuation.definition.block.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "}",
		"t": "source.js meta.block.js punctuation.definition.block.js",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	}
]